import {
  Theme,
  Dialog,
  Button,
  withStyles,
  Box,
  Select,
  Grid,
  TextField,
  FormControl
} from '@material-ui/core';
import '../Modal/CrearPolitic.css';
import MuiDialogContent from '@material-ui/core/DialogContent';
import MuiDialogActions from '@material-ui/core/DialogActions';
import { OutlinedInput } from '@mui/material';
import { useEffect, useState, useContext, useReducer } from 'react';
import { SuccessfulAlert } from '../../../alerts/successAlerts';
import { PoliticModal } from '../../../interfaces/TabPolitic.interfaces';
import { useForm } from '../../../hooks/useForm';
import { editPolitic, getAllPolitic } from '../../../services/PoliticService';
import PoliticContext from "../../../context/ConfigPayrollContext/PoliticContext";
import { closePoliticModal } from '../../Team/Modals/ModalPoliticModal';
import '../Politic.css';
import { ErrorAlert } from '../../../alerts/errorAlert';
import {updatePolitic} from '../../../helpers/Nomina/Politics'
import BpCheckbox from '../../ConfigPayroll/IOSSwitch/PoliticCheckbox';
import { useMutation } from "@apollo/client";
import { GET_ALL_POLITIC, UPDATE_POLITIC } from "../../../Querys/querys";
import SaveIcon from '@material-ui/icons/Save';



const DialogContent = withStyles((theme: Theme) => ({
  root: {
      padding: theme.spacing(2),
  },
}))(MuiDialogContent);

const DialogActions = withStyles((theme: Theme) => ({
  root: {
      margin: 0,
      padding: theme.spacing(1),
  },
}))(MuiDialogActions);

const EditaPuesto = (props: any) => {
      
  const [updatePolitics] = useMutation(UPDATE_POLITIC, {
      refetchQueries: [{ query: GET_ALL_POLITIC }],
  });
  

  const [politics, setPolitics] = useState([]);
  const {state, dispatch} = useContext(PoliticContext)
  const [cambio, setCambio] = useState(0)
  const [value, setValue] = useState()

  useEffect(() => {
      async function fetchData() {
          let result = await getAllPolitic();
          setPolitics(result);
      }
      fetchData();
      return () => {
          fetchData();
          setPolitics([]);
      }
  }, [state._id]);


  const onChange = async(e: any) => {
      
          let nuevoValor = e.target.value
          setValue(nuevoValor);
          await updatePolitic(e, state, dispatch, e.target.name, nuevoValor)
  };



  const onSumbit = async () => {
      if (state.PolicyName !== '' && state.EconomicDays !== '' ){

          updatePolitics({
              variables: {
                  updatePoliticId: state._id,
                input: {
                  policy_name: state.PolicyName,
                  economic_days: state.EconomicDays,
                  anniversary_vacation_premium: state.AnniversaryVacationPremium,
                  pantry_value_type: state.PantryValueType,
                  pantry_value_cap: state.PantryValueCap,
                  pantry_value: state.PantryValue,
                  saving_fund_type: state.SavingsFundType,
                  saving_fund_cap: state.SavingsFundCap,
                  saving_fund: state.SavingsFund,
                  restaurant_value: state.RestaurantValue,
                  restaurant_value_type: state.RestaurantValueType,
                  restaurant_value_cap: state.RestaurantValueCap,
                  absence_discount: state.AbsenceDiscount,
                  disability_discount: state.DisabilityDiscount,
                  voucher_cost: state.VoucherCost
                },
              },
            });


          SuccessfulAlert({ title: "¡Éxito!", text: "¡Se ha actualizado la política correctamente!" })
          await closePoliticModal(dispatch);
          await props.getDatos();
          dispatch({ type: "CLOSE_POLITIC_MODAL" });
      } 
      else {
          return ErrorAlert({ text: "Ingresa todos los campos" });
      }
  }


  const handleClose = async () => {
      await closePoliticModal(dispatch);
      dispatch({ type: "CLOSE_POLITIC_MODAL" });
      
  }
  

  return(
      <div>
      <Dialog onClose={handleClose} aria-labelledby="customized-dialog-title" open={state.showEdit} fullWidth={false} maxWidth={"md"}>
        <div className="contenedorModalPolitics mt-10PoliticsModal">
          <p className="tituloModalPolitics">Crear nueva política</p>
        </div>
        <DialogContent className="dialogModalPolitics">
          <div className="contenedorModalPolitics mb32PoliticsModal">
            <div>
              <fieldset className="fieldsetModalPolitics">
                <legend className="legendFieldset">Nombre *</legend>
                <input 
                name="PolicyName"
                type="text"
                className="inputFieldsetModalPolitics"
                placeholder=''
                defaultValue={state.PolicyName}
                onChange={(e) => onChange(e)}/>
              </fieldset>
            </div>
          </div>
          <div className="contenedorModalPolitics mb21PoliticsModal">
            <div>
            <fieldset className="fieldsetModalPolitics">
                <legend className="legendFieldset">Días económicos *</legend>
                <input 
                name="EconomicDays"
                type="text"
                className="inputFieldsetModalPolitics"
                placeholder=''
                defaultValue={state.EconomicDays}
                onChange={(e) => onChange(e)}/>
              </fieldset>
            </div>
          </div>
            <div className="contenedorModalPolitics mb31PoliticsModal" >
              <div className="filaDobleCheck">
                <BpCheckbox 
                  NombreCampo={'AnniversaryVacationPremium'}
                  Value={state.AnniversaryVacationPremium}
                />
                <span className="textoModalPolitics">Prima vacacional al aniversario</span>
              </div>
            </div>
          <div className="contenedorSegundoModalPolitics">
            <div className="contenedorsubtituloModalPolitics">
              <span className="subtituloModalPolitics">Vales de despensa</span><div className="iconoAtencion">¡</div>
            </div>
          </div>
          <div className="contenedorModalPolitics mb17PoliticsModal">
            <div className="contenedorSelectModalPolitics">
              <select
                value={state.PantryValueType}
                onChange={(e) => onChange(e)}
                name="PantryValueType"
                className="selectModalPolitics"
              >
                <option value="Selecciona una de las categorias" disabled>Selecciona una de las categorías</option>
                <option value="Porcentual">Porcentual</option>
                <option value="Fijo">Fijo</option>
              </select>
              <div>
              <input 
                name="PantryValueCap"
                type="text"
                className="inputMedioModalPolitics"
                defaultValue={state.PantryValueCap}
                onChange={(e) => onChange(e)}/>
            </div>
            </div>       
          </div>
          <div className="contenedorModalPolitics mb31PoliticsModal" >
            <div className="filaDobleCheck">
              <BpCheckbox 
                  NombreCampo={'PantryValue'}
                  Value={state.PantryValue}
              />
              <span className="textoModalPolitics">Tope de vales de despensa</span>
            </div>
          </div>
          <div className="contenedorSegundoModalPolitics">
            <div className="contenedorsubtituloModalPolitics">
              <span className="subtituloModalPolitics">Fondo de ahorro</span><div className="iconoAtencion">¡</div>
            </div>
          </div>
          <div className="contenedorModalPolitics mb17PoliticsModal">
            <div className="contenedorSelectModalPolitics">
              <select
                value={state.SavingsFundType}
                onChange={(e) => onChange(e)}
                name="SavingsFundType"
                className="selectModalPolitics"
              >
                <option value="Selecciona una de las categorias" disabled>Selecciona una de las categorías</option>
                <option value="Porcentual">Porcentual</option>
                <option value="Fijo">Fijo</option>
              </select>
              <div>
              <input 
                name="SavingsFundCap"
                type="text"
                className="inputMedioModalPolitics"
                defaultValue={state.SavingsFundCap}
                onChange={(e) => onChange(e)}/>
              
            </div>
            
            </div>       
          </div>
          <div className="contenedorModalPolitics mb31PoliticsModal" >
            <div className="filaDobleCheck">
              <BpCheckbox
                  NombreCampo={'SavingsFund'}
                  Value={state.SavingsFund}
              />
              <span className="textoModalPolitics">Tope de fondo de ahorro</span>
            </div>
          </div>
          <div className="contenedorSegundoModalPolitics">
            <div className="contenedorsubtituloModalPolitics">
              <span className="subtituloModalPolitics">Vales de restaurante</span><div className="iconoAtencion">¡</div>
            </div>
          </div>
          <div className="contenedorModalPolitics mb17PoliticsModal">
            <div className="contenedorSelectModalPolitics">
              <select
                value={state.RestaurantValueType}
                onChange={(e) => onChange(e)}
                name="RestaurantValueType"
                className="selectModalPolitics"
              >
                <option value="Selecciona una de las categorias" disabled>Selecciona una de las categorías</option>
                <option value="Porcentual">Porcentual</option>
                <option value="Fijo">Fijo</option>
              </select>
              <div>
              <input 
                name="RestaurantValueCap"
                type="text"
                className="inputMedioModalPolitics"
                defaultValue={state.RestaurantValueCap}
                onChange={(e) => onChange(e)}/>
            </div>
            </div>       
          </div>
          <div className="contenedorModalPolitics mb31PoliticsModal" >
            <div className="filaDobleCheck">
              <BpCheckbox 
                  NombreCampo={'RestaurantValue'}
                  Value={state.RestaurantValue}
              />
              <span className="textoModalPolitics">Tope de vales de restaurante</span>
            </div>
          </div>
          <div className="contenedorSegundoModalPolitics">
            <div className="contenedorsubtituloModalPolitics">
              <span className="subtituloModalPolitics">Descuento para cálculos</span><div className="iconoAtencion">¡</div>
            </div>
          </div>
          <div className="contenedorModalPolitics" >
            <div className="filaDobleCheck">
              <BpCheckbox
                  NombreCampo={'AbsenceDiscount'}
                  Value={state.AbsenceDiscount}
              />
              <span className="textoModalPolitics">Se descuentan faltas</span>
            </div>
          </div>
          <div className="contenedorModalPolitics" >
            <div className="filaDobleCheck">
              <BpCheckbox
                  NombreCampo={'DisabilityDiscount'}
                  Value={state.DisabilityDiscount}
              />
              <span className="textoModalPolitics">Se descuentan incapacidades</span>
            </div>
          </div>
          <div className="contenedorModalPolitics" >
            <div className="filaDobleCheck">
              <BpCheckbox
                  NombreCampo={'VoucherCost'}
                  Value={state.VoucherCost}
              />
              <span className="textoModalPolitics">Costo vales de restaurante</span>
            </div>
          </div>
        </DialogContent>
        <DialogActions >
          <div className="contenedorBotonesPoliticsModal">
              <button autoFocus onClick={handleClose} className="botonCancelarModal">
                  Cancelar
              </button>
              <button autoFocus onClick={onSumbit} className="botonGuardarModal botonDoble">
              <div className="contenedorIconoBotonModal">
                <SaveIcon fontSize="small"/>
              </div>
              <div>
                Guardar
              </div>
              </button>
          </div>
          </DialogActions>
      </Dialog>
    </div>
  )
}

export default EditaPuesto

